{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,E,I,A,W,M,A,U,wI,G,C,S,E,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAa,SAAS,gBAAgB,CAAC,MACvC,EAAa,SAAS,gBAAgB,CAAC,MACvC,EAAS,EAAI,GAAY,GAAG,CAAC,SAAC,CAApC,EAAgD,OAAA,EAAQ,UAAU,A,GAC5D,EAAa,CAAC,EAEd,EAAmB,SAAC,CAAA,CAAQ,CAAA,CAAU,CAAA,CAAO,CAAA,CAAa,CAAhE,EACE,IAAM,EAAe,SAAS,aAAa,CAAC,OAE5C,EAAa,SAAS,CAAC,GAAG,CAAC,eAAgB,GAC3C,EAAa,OAAO,CAAC,EAAE,CAAG,eAC1B,EAAa,SAAS,CAAI,qBAAoC,MAAA,CAAhB,EAAM,YAAsB,MAAA,CAAZ,EAAY,QAE1E,EAAa,KAAK,CAAC,GAAG,CAAG,EAAS,KAClC,EAAa,KAAK,CAAC,KAAK,CAAG,EAAW,KAEtC,SAAS,IAAI,CAAC,WAAW,CAAC,GAE1B,WAAW,WACT,EAAa,MAAM,EACrB,EAAG,IACL,EAEM,EAAW,SAAS,aAAa,CAAC,QAKxC,SAAS,EAAc,CAAI,CAAE,CAAK,EAChC,IAAM,EAAU,SAAS,aAAa,CAAC,GAYvC,OAVA,OAAO,IAAI,CAAC,GAAO,OAAO,CAAC,SAAC,CAA5B,EACM,AAAQ,YAAR,EACF,OAAO,IAAI,CAAC,CAAK,CAAC,EAAI,EAAE,OAAO,CAAC,SAAC,CADnC,EAEI,OAAO,EAAQ,YAAY,CAAE,QAAe,MAAA,CAAR,GAAW,CAAK,CAAC,EAAI,CAAC,EAAQ,CACpE,GAEA,CAAO,CAAC,EAAI,CAAG,CAA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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar thElements = document.querySelectorAll(\"th\");\nvar trElements = document.querySelectorAll(\"tr\");\nvar thText = _to_consumable_array(thElements).map(function(element) {\n    return element.firstChild;\n});\nvar clickCount = {};\nvar pushNotification = function(posTop, posRight, title, description, type) {\n    var notification = document.createElement(\"div\");\n    notification.classList.add(\"notification\", type);\n    notification.dataset.qa = \"notification\";\n    notification.innerHTML = \"<h2 class='title'>\".concat(title, \"</h2><p>\").concat(description, \"</p>\");\n    notification.style.top = posTop + \"px\";\n    notification.style.right = posRight + \"px\";\n    document.body.appendChild(notification);\n    setTimeout(function() {\n        notification.remove();\n    }, 2000);\n};\nvar formHTML = document.createElement(\"form\");\nformHTML.className = \"new-employee-form\";\nformHTML.setAttribute(\"onsubmit\", \"{return false;}\");\nfunction createElement(type, props) {\n    var element = document.createElement(type);\n    Object.keys(props).forEach(function(key) {\n        if (key === \"dataset\") Object.keys(props[key]).forEach(function(dataKey) {\n            return element.setAttribute(\"data-\".concat(dataKey), props[key][dataKey]);\n        });\n        else element[key] = props[key];\n    });\n    return element;\n}\nvar offices = [\n    {\n        value: \"Tokyo\",\n        textContent: \"Tokyo\"\n    },\n    {\n        value: \"Singapore\",\n        textContent: \"Singapore\"\n    },\n    {\n        value: \"London\",\n        textContent: \"London\"\n    },\n    {\n        value: \"New York\",\n        textContent: \"New York\"\n    },\n    {\n        value: \"Edinburgh\",\n        textContent: \"Edinburgh\"\n    },\n    {\n        value: \"San Francisco\",\n        textContent: \"San Francisco\"\n    }\n];\nvar nameLabel = createElement(\"label\", {\n    textContent: \"Name:\"\n});\nvar nameInput = createElement(\"input\", {\n    name: \"Name\",\n    dataset: {\n        qa: \"name\"\n    },\n    type: \"text\",\n    required: true\n});\nnameLabel.appendChild(nameInput);\nformHTML.appendChild(nameLabel);\nvar positionLabel = createElement(\"label\", {\n    textContent: \"Position:\"\n});\nvar positionInput = createElement(\"input\", {\n    name: \"Position\",\n    dataset: {\n        qa: \"position\"\n    },\n    type: \"text\",\n    required: true\n});\npositionLabel.appendChild(positionInput);\nformHTML.appendChild(positionLabel);\nvar officeLabel = createElement(\"label\", {\n    textContent: \"Office:\"\n});\nvar officeSelect = createElement(\"select\", {\n    name: \"Office\",\n    dataset: {\n        qa: \"office\"\n    },\n    required: true\n});\noffices.forEach(function(option) {\n    var createOption = createElement(\"option\", option);\n    officeSelect.appendChild(createOption);\n});\nofficeLabel.appendChild(officeSelect);\nformHTML.appendChild(officeLabel);\nvar ageLabel = createElement(\"label\", {\n    textContent: \"Age:\"\n});\nvar ageInput = createElement(\"input\", {\n    name: \"Age\",\n    dataset: {\n        qa: \"age\"\n    },\n    type: \"number\",\n    required: true\n});\nageLabel.appendChild(ageInput);\nformHTML.appendChild(ageLabel);\nvar salaryLabel = createElement(\"label\", {\n    textContent: \"Salary:\"\n});\nvar salaryInput = createElement(\"input\", {\n    name: \"Salary\",\n    dataset: {\n        qa: \"salary\"\n    },\n    type: \"number\",\n    required: true\n});\nsalaryLabel.appendChild(salaryInput);\nformHTML.appendChild(salaryLabel);\nvar formButton = createElement(\"button\", {\n    type: \"submit\",\n    textContent: \"Save to table\"\n});\nformHTML.appendChild(formButton);\ntable.insertAdjacentHTML(\"afterend\", formHTML.outerHTML);\nvar form = document.querySelector(\"form\");\ntable.addEventListener(\"click\", function(e) {\n    var th = e.target.closest(\"th\");\n    var tr = e.target.closest(\"tr\");\n    var indexColumn;\n    var rows = [];\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            rows.push(_to_consumable_array(row.cells).map(function(element) {\n                return element.innerHTML;\n            }));\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    if (e.target.tagName === \"TD\") {\n        trElements.forEach(function(element) {\n            return element.classList.remove(\"active\");\n        });\n        tr.classList.add(\"active\");\n    }\n    if (th) {\n        indexColumn = thText.indexOf(th.firstChild);\n        if (!clickCount[indexColumn]) clickCount[indexColumn] = 0;\n        if (clickCount[indexColumn] === 2) clickCount[indexColumn] = 0;\n        clickCount[indexColumn]++;\n    } else return;\n    rows = rows.slice(1, -1).map(function(row) {\n        return row.map(function(element) {\n            if (element.includes(\"$\")) return Number(element.slice(1).replace(\",\", \"\"));\n            return +element ? +element : element;\n        });\n    }).sort(function(a, b) {\n        if (clickCount[indexColumn] === 1) {\n            if (typeof a[indexColumn] === \"number\") return a[indexColumn] - b[indexColumn];\n            return a[indexColumn].localeCompare(b[indexColumn]);\n        } else {\n            if (typeof a[indexColumn] === \"number\") return b[indexColumn] - a[indexColumn];\n            return b[indexColumn].localeCompare(a[indexColumn]);\n        }\n    }).map(function(row) {\n        return row.map(function(element) {\n            if (row.indexOf(element) === 4) return \"$\" + element.toLocaleString();\n            return String(element);\n        });\n    });\n    for(var i = 0; i < rows.length; i++)for(var cell = 0; cell < table.rows[i + 1].cells.length; cell++)table.rows[i + 1].cells[cell].innerHTML = rows[i][cell];\n});\nform.addEventListener(\"click\", function(e) {\n    var validateForm = function validateForm(data) {\n        if (data[\"Name\"].length < 4) {\n            pushNotification(10, 10, \"Error\", \"Name value has less than 4 letters.\", \"error\");\n            return false;\n        }\n        if (data[\"Age\"] < 18 || data[\"Age\"] > 90) {\n            pushNotification(10, 10, \"Error\", \"Age value is less than 18 or more than 90\", \"error\");\n            return false;\n        }\n        if (Object.values(data).indexOf(\"\") !== -1) {\n            pushNotification(10, 10, \"Error\", \"Field with invalid input\", \"error\");\n            return false;\n        }\n        pushNotification(10, 10, \"Success\", \"A new employee is successfully added to the table\", \"success\");\n        return true;\n    };\n    var button = e.target.closest(\"button\");\n    if (!button) return;\n    button.type = \"submit\";\n    var formData = new FormData(form);\n    var userData = {};\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = formData.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var _step_value = _sliced_to_array(_step.value, 2), key = _step_value[0], value = _step_value[1];\n            if (key === \"Salary\") userData[key] = \"$\" + Number(value).toLocaleString();\n            else userData[key] = value;\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    if (validateForm(userData)) {\n        button.type = \"reset\";\n        table.rows[table.rows.length - 2].insertAdjacentHTML(\"afterend\", \"<tr><td>\".concat(userData[\"Name\"], \"</td><td>\").concat(userData[\"Position\"], \"</td><td>\").concat(userData[\"Office\"], \"</td><td>\").concat(userData[\"Age\"], \"</td><td>\").concat(userData[\"Salary\"], \"</td></tr>\"));\n    }\n});\n\n//# sourceMappingURL=index.2d2aa841.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst thElements = document.querySelectorAll('th');\nconst trElements = document.querySelectorAll('tr');\nconst thText = [...thElements].map((element) => element.firstChild);\nconst clickCount = {};\n\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  const notification = document.createElement('div');\n\n  notification.classList.add('notification', type);\n  notification.dataset.qa = 'notification';\n  notification.innerHTML = `<h2 class='title'>${title}</h2><p>${description}</p>`;\n\n  notification.style.top = posTop + 'px';\n  notification.style.right = posRight + 'px';\n\n  document.body.appendChild(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 2000);\n};\n\nconst formHTML = document.createElement('form');\n\nformHTML.className = 'new-employee-form';\nformHTML.setAttribute('onsubmit', '{return false;}');\n\nfunction createElement(type, props) {\n  const element = document.createElement(type);\n\n  Object.keys(props).forEach((key) => {\n    if (key === 'dataset') {\n      Object.keys(props[key]).forEach((dataKey) => {\n        return element.setAttribute(`data-${dataKey}`, props[key][dataKey]);\n      });\n    } else {\n      element[key] = props[key];\n    }\n  });\n\n  return element;\n}\n\nconst offices = [\n  { value: 'Tokyo', textContent: 'Tokyo' },\n  { value: 'Singapore', textContent: 'Singapore' },\n  { value: 'London', textContent: 'London' },\n  { value: 'New York', textContent: 'New York' },\n  { value: 'Edinburgh', textContent: 'Edinburgh' },\n  { value: 'San Francisco', textContent: 'San Francisco' },\n];\n\nconst nameLabel = createElement('label', { textContent: 'Name:' });\nconst nameInput = createElement('input', {\n  name: 'Name',\n  dataset: { qa: 'name' },\n  type: 'text',\n  required: true,\n});\n\nnameLabel.appendChild(nameInput);\nformHTML.appendChild(nameLabel);\n\nconst positionLabel = createElement('label', { textContent: 'Position:' });\nconst positionInput = createElement('input', {\n  name: 'Position',\n  dataset: { qa: 'position' },\n  type: 'text',\n  required: true,\n});\n\npositionLabel.appendChild(positionInput);\nformHTML.appendChild(positionLabel);\n\nconst officeLabel = createElement('label', { textContent: 'Office:' });\nconst officeSelect = createElement('select', {\n  name: 'Office',\n  dataset: { qa: 'office' },\n  required: true,\n});\n\noffices.forEach((option) => {\n  const createOption = createElement('option', option);\n\n  officeSelect.appendChild(createOption);\n});\n\nofficeLabel.appendChild(officeSelect);\nformHTML.appendChild(officeLabel);\n\nconst ageLabel = createElement('label', { textContent: 'Age:' });\nconst ageInput = createElement('input', {\n  name: 'Age',\n  dataset: { qa: 'age' },\n  type: 'number',\n  required: true,\n});\n\nageLabel.appendChild(ageInput);\nformHTML.appendChild(ageLabel);\n\nconst salaryLabel = createElement('label', { textContent: 'Salary:' });\nconst salaryInput = createElement('input', {\n  name: 'Salary',\n  dataset: { qa: 'salary' },\n  type: 'number',\n  required: true,\n});\n\nsalaryLabel.appendChild(salaryInput);\nformHTML.appendChild(salaryLabel);\n\nconst formButton = createElement('button', {\n  type: 'submit',\n  textContent: 'Save to table',\n});\n\nformHTML.appendChild(formButton);\n\ntable.insertAdjacentHTML('afterend', formHTML.outerHTML);\n\nconst form = document.querySelector('form');\n\ntable.addEventListener('click', (e) => {\n  const th = e.target.closest('th');\n  const tr = e.target.closest('tr');\n\n  let indexColumn;\n  let rows = [];\n\n  for (const row of table.rows) {\n    rows.push([...row.cells].map((element) => element.innerHTML));\n  }\n\n  if (e.target.tagName === 'TD') {\n    trElements.forEach((element) => element.classList.remove('active'));\n    tr.classList.add('active');\n  }\n\n  if (th) {\n    indexColumn = thText.indexOf(th.firstChild);\n\n    if (!clickCount[indexColumn]) {\n      clickCount[indexColumn] = 0;\n    }\n\n    if (clickCount[indexColumn] === 2) {\n      clickCount[indexColumn] = 0;\n    }\n\n    clickCount[indexColumn]++;\n  } else {\n    return;\n  }\n\n  rows = rows\n    .slice(1, -1)\n    .map((row) => {\n      return row.map((element) => {\n        if (element.includes('$')) {\n          return Number(element.slice(1).replace(',', ''));\n        }\n\n        return +element ? +element : element;\n      });\n    })\n    .sort((a, b) => {\n      if (clickCount[indexColumn] === 1) {\n        if (typeof a[indexColumn] === 'number') {\n          return a[indexColumn] - b[indexColumn];\n        }\n\n        return a[indexColumn].localeCompare(b[indexColumn]);\n      } else {\n        if (typeof a[indexColumn] === 'number') {\n          return b[indexColumn] - a[indexColumn];\n        }\n\n        return b[indexColumn].localeCompare(a[indexColumn]);\n      }\n    })\n    .map((row) => {\n      return row.map((element) => {\n        if (row.indexOf(element) === 4) {\n          return '$' + element.toLocaleString();\n        }\n\n        return String(element);\n      });\n    });\n\n  for (let i = 0; i < rows.length; i++) {\n    for (let cell = 0; cell < table.rows[i + 1].cells.length; cell++) {\n      table.rows[i + 1].cells[cell].innerHTML = rows[i][cell];\n    }\n  }\n});\n\nform.addEventListener('click', (e) => {\n  const button = e.target.closest('button');\n\n  if (!button) {\n    return;\n  }\n\n  button.type = 'submit';\n\n  const formData = new FormData(form);\n  const userData = {};\n\n  for (const [key, value] of formData.entries()) {\n    if (key === 'Salary') {\n      userData[key] = '$' + Number(value).toLocaleString();\n    } else {\n      userData[key] = value;\n    }\n  }\n\n  function validateForm(data) {\n    if (data['Name'].length < 4) {\n      pushNotification(\n        10,\n        10,\n        'Error',\n        'Name value has less than 4 letters.',\n        'error',\n      );\n\n      return false;\n    }\n\n    if (data['Age'] < 18 || data['Age'] > 90) {\n      pushNotification(\n        10,\n        10,\n        'Error',\n        'Age value is less than 18 or more than 90',\n        'error',\n      );\n\n      return false;\n    }\n\n    if (Object.values(data).indexOf('') !== -1) {\n      pushNotification(10, 10, 'Error', 'Field with invalid input', 'error');\n\n      return false;\n    }\n\n    pushNotification(\n      10,\n      10,\n      'Success',\n      'A new employee is successfully added to the table',\n      'success',\n    );\n\n    return true;\n  }\n\n  if (validateForm(userData)) {\n    button.type = 'reset';\n\n    table.rows[table.rows.length - 2].insertAdjacentHTML(\n      'afterend',\n      `<tr><td>${userData['Name']}</td><td>${userData['Position']}</td><td>${userData['Office']}</td><td>${userData['Age']}</td><td>${userData['Salary']}</td></tr>`,\n    );\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","_non_iterable_spread","TypeError","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","table","document","querySelector","thElements","querySelectorAll","trElements","thText","map","element","firstChild","clickCount","pushNotification","posTop","posRight","title","description","type","notification","createElement","classList","add","dataset","qa","innerHTML","concat","style","top","right","body","appendChild","setTimeout","remove","formHTML","props","keys","forEach","key","dataKey","setAttribute","className","nameLabel","textContent","nameInput","required","positionLabel","positionInput","officeLabel","officeSelect","offices","value","option","createOption","ageLabel","ageInput","salaryLabel","salaryInput","formButton","insertAdjacentHTML","outerHTML","form","addEventListener","e","th","target","closest","tr","rows","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","indexColumn","_step","_iterator","next","done","row","push","cells","err","return","tagName","indexOf","includes","Number","replace","sort","a","b","localeCompare","toLocaleString","String","cell","button","formData","FormData","userData","entries","_step_value","_array_with_holes","_iterable_to_array_limit","_s","_e","_i","_arr","_n","_d","_non_iterable_rest","data","values"],"version":3,"file":"index.2d2aa841.js.map"}